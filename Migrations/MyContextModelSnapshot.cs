// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using belt_exam.Models;

namespace belt_exam.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("belt_exam.Models.AnActivity", b =>
                {
                    b.Property<int>("Activityid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created_At")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description");

                    b.Property<int>("Duration")
                        .HasColumnName("duration");

                    b.Property<string>("Hour_Min_Day")
                        .HasColumnName("hour_min_day");

                    b.Property<DateTime>("Time")
                        .HasColumnName("time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnName("updated_at");

                    b.Property<int>("Userid");

                    b.Property<DateTime>("date")
                        .HasColumnName("date");

                    b.HasKey("Activityid");

                    b.HasIndex("Userid");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("belt_exam.Models.AttendeeList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Activityid");

                    b.Property<int>("Userid");

                    b.HasKey("id");

                    b.HasIndex("Activityid");

                    b.HasIndex("Userid");

                    b.ToTable("AttendeeLists");
                });

            modelBuilder.Entity("belt_exam.Models.User", b =>
                {
                    b.Property<int>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created_At")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("Updated_At")
                        .HasColumnName("updated_at");

                    b.HasKey("Userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("belt_exam.Models.AnActivity", b =>
                {
                    b.HasOne("belt_exam.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("belt_exam.Models.AttendeeList", b =>
                {
                    b.HasOne("belt_exam.Models.AnActivity", "AnActivity")
                        .WithMany("RSVPList")
                        .HasForeignKey("Activityid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("belt_exam.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
